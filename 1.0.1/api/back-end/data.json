{
    "project": {
        "name": "OpenVeo Publish AngularJS back end",
        "description": "AngularJS OpenVeo Publish plugin back end documentation",
        "version": "1.0.1"
    },
    "files": {
        "app\\client\\admin\\js\\multirange\\multirange.js": {
            "name": "app\\client\\admin\\js\\multirange\\multirange.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "app\\client\\admin\\js\\ovPub\\CategoriesController.js": {
            "name": "app\\client\\admin\\js\\ovPub\\CategoriesController.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "app\\client\\admin\\js\\ovPub\\ChapterController.js": {
            "name": "app\\client\\admin\\js\\ovPub\\ChapterController.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "app\\client\\admin\\js\\ovPub\\PropertiesController.js": {
            "name": "app\\client\\admin\\js\\ovPub\\PropertiesController.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "app\\client\\admin\\js\\ovPub\\PublishApp.js": {
            "name": "app\\client\\admin\\js\\ovPub\\PublishApp.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "app\\client\\admin\\js\\ovPub\\PublishService.js": {
            "name": "app\\client\\admin\\js\\ovPub\\PublishService.js",
            "modules": {
                "ov.publish": 1
            },
            "classes": {
                "publishService": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app\\client\\admin\\js\\ovPub\\VideoController.js": {
            "name": "app\\client\\admin\\js\\ovPub\\VideoController.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "app\\client\\admin\\js\\ovPub\\WatcherController.js": {
            "name": "app\\client\\admin\\js\\ovPub\\WatcherController.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "app\\client\\admin\\js\\timePolyfill\\time-polyfill.js": {
            "name": "app\\client\\admin\\js\\timePolyfill\\time-polyfill.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "ov.publish": {
            "name": "ov.publish",
            "submodules": {},
            "classes": {
                "publishService": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "app\\client\\admin\\js\\ovPub\\PublishService.js",
            "line": 5,
            "description": "Defines a publish service to manage videos, watcher, categories and properties."
        }
    },
    "classes": {
        "publishService": {
            "name": "publishService",
            "shortname": "publishService",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ov.publish",
            "namespace": "",
            "file": "app\\client\\admin\\js\\ovPub\\PublishService.js",
            "line": 5,
            "description": "Defines a publish service to manage videos, watcher, categories and properties."
        }
    },
    "classitems": [
        {
            "file": "app\\client\\admin\\js\\multirange\\multirange.js",
            "line": 333,
            "description": "TODO\nDefines getter and setter on range data object.",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "multiplier",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "publishService"
        },
        {
            "file": "app\\client\\admin\\js\\ovPub\\CategoriesController.js",
            "line": 5,
            "description": "Defines the categories controller for the categories page.",
            "class": "publishService"
        },
        {
            "file": "app\\client\\admin\\js\\ovPub\\CategoriesController.js",
            "line": 10,
            "description": "Handles success when a category is added or updated.",
            "class": "publishService"
        },
        {
            "file": "app\\client\\admin\\js\\ovPub\\CategoriesController.js",
            "line": 20,
            "description": "Handles error when a category is added or updated.",
            "params": [
                {
                    "name": "data",
                    "description": "Response data",
                    "type": "Object"
                },
                {
                    "name": "status",
                    "description": "HTTP code",
                    "type": "Number"
                }
            ],
            "class": "publishService"
        },
        {
            "file": "app\\client\\admin\\js\\ovPub\\CategoriesController.js",
            "line": 29,
            "description": "Check that category name field is not empty.",
            "class": "publishService"
        },
        {
            "file": "app\\client\\admin\\js\\ovPub\\CategoriesController.js",
            "line": 98,
            "description": "Rights",
            "class": "publishService"
        },
        {
            "file": "app\\client\\admin\\js\\ovPub\\ChapterController.js",
            "line": 5,
            "description": "Defines the categories controller for the categories page.",
            "class": "publishService"
        },
        {
            "file": "app\\client\\admin\\js\\ovPub\\ChapterController.js",
            "line": 19,
            "description": "Reconstructs ranges with chapters and cut array.",
            "class": "publishService"
        },
        {
            "file": "app\\client\\admin\\js\\ovPub\\ChapterController.js",
            "line": 28,
            "description": "Initializes chapters and start / end cuts.",
            "class": "publishService"
        },
        {
            "file": "app\\client\\admin\\js\\ovPub\\ChapterController.js",
            "line": 60,
            "description": "Gather some parameters before calling init",
            "params": [
                {
                    "name": "duration",
                    "description": "a parameter needed before init",
                    "type": "Type"
                }
            ],
            "class": "publishService"
        },
        {
            "file": "app\\client\\admin\\js\\ovPub\\ChapterController.js",
            "line": 78,
            "description": "Calling preinit with a duration chnage on the player, it sometimes fail so...",
            "class": "publishService"
        },
        {
            "file": "app\\client\\admin\\js\\ovPub\\ChapterController.js",
            "line": 85,
            "description": "... we also use a timer for initition, we consider 2 sec to be long enougth",
            "class": "publishService"
        },
        {
            "file": "app\\client\\admin\\js\\ovPub\\ChapterController.js",
            "line": 242,
            "description": "Selects and unselect a provided cut",
            "params": [
                {
                    "name": "cut",
                    "description": "the cut to toggle",
                    "type": "Object"
                },
                {
                    "name": "addOrRemove",
                    "description": "forces the addition or removal of the cut",
                    "type": "Boolean"
                }
            ],
            "class": "publishService"
        },
        {
            "file": "app\\client\\admin\\js\\ovPub\\ChapterController.js",
            "line": 259,
            "description": "Selects or unselect the begin cut",
            "params": [
                {
                    "name": "addOrRemove",
                    "description": "forces the addition or removal of the cut",
                    "type": "Boolean"
                }
            ],
            "class": "publishService"
        },
        {
            "file": "app\\client\\admin\\js\\ovPub\\ChapterController.js",
            "line": 267,
            "description": "Selects or unselect the ending cut",
            "params": [
                {
                    "name": "addOrRemove",
                    "description": "foreces the addition or removal of the cut",
                    "type": "Boolean"
                }
            ],
            "class": "publishService"
        },
        {
            "file": "app\\client\\admin\\js\\ovPub\\PropertiesController.js",
            "line": 5,
            "description": "Defines the properties controller for the properties page.",
            "class": "publishService"
        },
        {
            "file": "app\\client\\admin\\js\\ovPub\\PropertiesController.js",
            "line": 10,
            "description": "Removes a list of properties.",
            "params": [
                {
                    "name": "selected",
                    "description": "The list of property ids to remove",
                    "type": "Array"
                },
                {
                    "name": "reload",
                    "description": "The reload Function to force reloading the table",
                    "type": "Function"
                }
            ],
            "class": "publishService"
        },
        {
            "file": "app\\client\\admin\\js\\ovPub\\PropertiesController.js",
            "line": 24,
            "description": "Adds a property.",
            "params": [
                {
                    "name": "property",
                    "description": "Property data",
                    "type": "Object"
                }
            ],
            "class": "publishService"
        },
        {
            "file": "app\\client\\admin\\js\\ovPub\\PropertiesController.js",
            "line": 35,
            "description": "Saves property.",
            "params": [
                {
                    "name": "Object",
                    "description": "property Property data"
                }
            ],
            "class": "publishService"
        },
        {
            "file": "app\\client\\admin\\js\\ovPub\\PublishApp.js",
            "line": 14,
            "description": "Defines a filter to print status in cells.\n\nThis filter has one optional Number parameter which must be specified\nif the input is equal to 8 (error status), to precise the error code.",
            "class": "publishService"
        },
        {
            "file": "app\\client\\admin\\js\\ovPub\\PublishApp.js",
            "line": 45,
            "description": "Filter to print Category in cells.",
            "class": "publishService"
        },
        {
            "file": "app\\client\\admin\\js\\ovPub\\PublishService.js",
            "line": 20,
            "description": "Retries a video.\n\nIf a video is on error, the upload / publication process has stopped and can be retried.",
            "params": [
                {
                    "name": "id",
                    "description": "The id of the video to retry",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The HTTP promise",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "retryVideo",
            "class": "publishService",
            "module": "ov.publish"
        },
        {
            "file": "app\\client\\admin\\js\\ovPub\\PublishService.js",
            "line": 34,
            "description": "Publishes the given video.",
            "params": [
                {
                    "name": "id",
                    "description": "The id of the video to publish",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The HTTP promise",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "publishVideo",
            "class": "publishService",
            "module": "ov.publish"
        },
        {
            "file": "app\\client\\admin\\js\\ovPub\\PublishService.js",
            "line": 46,
            "description": "Unpublishes the given video.",
            "params": [
                {
                    "name": "id",
                    "description": "The id of the video to unpublish",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The HTTP promise",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "unpublishVideo",
            "class": "publishService",
            "module": "ov.publish"
        },
        {
            "file": "app\\client\\admin\\js\\ovPub\\PublishService.js",
            "line": 58,
            "description": "Gets watcher status.",
            "return": {
                "description": "The HTTP promise",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "getWatcherStatus",
            "class": "publishService",
            "module": "ov.publish"
        },
        {
            "file": "app\\client\\admin\\js\\ovPub\\PublishService.js",
            "line": 68,
            "description": "Starts the watcher.",
            "return": {
                "description": "The HTTP promise",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "startWatcher",
            "class": "publishService",
            "module": "ov.publish"
        },
        {
            "file": "app\\client\\admin\\js\\ovPub\\PublishService.js",
            "line": 78,
            "description": "Stops the watcher.",
            "return": {
                "description": "The HTTP promise",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "stopWatcher",
            "class": "publishService",
            "module": "ov.publish"
        },
        {
            "file": "app\\client\\admin\\js\\ovPub\\PublishService.js",
            "line": 88,
            "description": "Loads all properties from server.",
            "return": {
                "description": "The HTTP promise",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "loadProperties",
            "class": "publishService",
            "module": "ov.publish"
        },
        {
            "file": "app\\client\\admin\\js\\ovPub\\PublishService.js",
            "line": 109,
            "description": "Gets list of properties.",
            "return": {
                "description": "The HTTP promise",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "getProperties",
            "class": "publishService",
            "module": "ov.publish"
        },
        {
            "file": "app\\client\\admin\\js\\ovPub\\PublishService.js",
            "line": 119,
            "description": "Loads the list of available media platforms from server.",
            "return": {
                "description": "The promise used to retrieve platforms from server",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "loadPlatforms",
            "class": "publishService",
            "module": "ov.publish"
        },
        {
            "file": "app\\client\\admin\\js\\ovPub\\PublishService.js",
            "line": 139,
            "description": "Gets the list of available platforms.",
            "return": {
                "description": "The HTTP promise",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "getPlatforms",
            "class": "publishService",
            "module": "ov.publish"
        },
        {
            "file": "app\\client\\admin\\js\\ovPub\\PublishService.js",
            "line": 149,
            "description": "Asks server to start uploading a video waiting for manual upload.",
            "params": [
                {
                    "name": "id",
                    "description": "The id of the video to start uploading",
                    "type": "String"
                },
                {
                    "name": "platform",
                    "description": "The video platform to upload to",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The HTTP promise",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "startVideoUpload",
            "class": "publishService",
            "module": "ov.publish"
        },
        {
            "file": "app\\client\\admin\\js\\ovPub\\PublishService.js",
            "line": 162,
            "description": "Loads the list of media categories.",
            "return": {
                "description": "The HTTP promise",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "loadCategories",
            "class": "publishService",
            "module": "ov.publish"
        },
        {
            "file": "app\\client\\admin\\js\\ovPub\\PublishService.js",
            "line": 195,
            "description": "Gets the list of categories.",
            "return": {
                "description": "The list of categories",
                "type": "Array"
            },
            "itemtype": "method",
            "name": "getCategories",
            "class": "publishService",
            "module": "ov.publish"
        },
        {
            "file": "app\\client\\admin\\js\\ovPub\\PublishService.js",
            "line": 205,
            "description": "Gets the list of categories formatted for an HTMLSelect element.",
            "return": {
                "description": "The list of categories",
                "type": "Array"
            },
            "itemtype": "method",
            "name": "getCategoriesOptions",
            "class": "publishService",
            "module": "ov.publish"
        },
        {
            "file": "app\\client\\admin\\js\\ovPub\\PublishService.js",
            "line": 215,
            "description": "Gets list of categories indexed by keys.",
            "return": {
                "description": "The list of categories",
                "type": "Object"
            },
            "itemtype": "method",
            "name": "getCategoriesByKey",
            "class": "publishService",
            "module": "ov.publish"
        },
        {
            "file": "app\\client\\admin\\js\\ovPub\\PublishService.js",
            "line": 225,
            "description": "Loads a video by its id.",
            "params": [
                {
                    "name": "id",
                    "description": "The video id",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The HTTP promise",
                "type": "Promise"
            },
            "itemtype": "method",
            "name": "loadVideo",
            "class": "publishService",
            "module": "ov.publish"
        },
        {
            "file": "app\\client\\admin\\js\\ovPub\\PublishService.js",
            "line": 243,
            "description": "Clears a publish service cache.",
            "params": [
                {
                    "name": "type",
                    "description": "The cache element to clear (**properties**, **categories** or **chapter**), null to\nclear all caches",
                    "type": "String",
                    "optional": true
                }
            ],
            "itemtype": "method",
            "name": "cacheClear",
            "class": "publishService",
            "module": "ov.publish"
        },
        {
            "file": "app\\client\\admin\\js\\ovPub\\VideoController.js",
            "line": 5,
            "description": "Defines the video controller for the videos page.",
            "class": "",
            "module": "ov.publish"
        },
        {
            "file": "app\\client\\admin\\js\\ovPub\\VideoController.js",
            "line": 54,
            "description": "Gets all categories and add a value for \"none\".",
            "params": [
                {
                    "name": "label",
                    "description": "The label for \"no categories\"",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The list of categories",
                "type": "Array"
            },
            "class": "",
            "module": "ov.publish"
        },
        {
            "file": "app\\client\\admin\\js\\ovPub\\VideoController.js",
            "line": 66,
            "description": "Opens a link in a new tab.",
            "params": [
                {
                    "name": "link",
                    "description": "Destination url",
                    "type": "String"
                }
            ],
            "class": "",
            "module": "ov.publish"
        },
        {
            "file": "app\\client\\admin\\js\\ovPub\\VideoController.js",
            "line": 74,
            "description": "Opens an alert to display HTML code to share the video.",
            "params": [
                {
                    "name": "video",
                    "description": "The video to share",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "ov.publish"
        },
        {
            "file": "app\\client\\admin\\js\\ovPub\\VideoController.js",
            "line": 101,
            "description": "Retries a video which is on error.",
            "params": [
                {
                    "name": "videos",
                    "description": "The list of videos to work on",
                    "type": "Array"
                },
                {
                    "name": "reload",
                    "description": "Function to reload the datatable",
                    "type": "Function"
                }
            ],
            "class": "",
            "module": "ov.publish"
        },
        {
            "file": "app\\client\\admin\\js\\ovPub\\VideoController.js",
            "line": 114,
            "description": "Asks server to start uploading the video to the chosen platform.",
            "params": [
                {
                    "name": "videos",
                    "description": "The list of videos to work on",
                    "type": "Array"
                },
                {
                    "name": "platformName",
                    "description": "The name of platform to upload to",
                    "type": "String"
                },
                {
                    "name": "reload",
                    "description": "Function to reload the datatable",
                    "type": "Function"
                }
            ],
            "class": "",
            "module": "ov.publish"
        },
        {
            "file": "app\\client\\admin\\js\\ovPub\\VideoController.js",
            "line": 128,
            "description": "Publishes a list of videos.",
            "params": [
                {
                    "name": "videos",
                    "description": "The list of video ids to publish",
                    "type": "Array"
                },
                {
                    "name": "reload",
                    "description": "Function to reload the datatable",
                    "type": "Function"
                }
            ],
            "class": "",
            "module": "ov.publish"
        },
        {
            "file": "app\\client\\admin\\js\\ovPub\\VideoController.js",
            "line": 141,
            "description": "Unpublishes a list of videos.",
            "params": [
                {
                    "name": "videos",
                    "description": "The list of video ids to unpublish",
                    "type": "Array"
                },
                {
                    "name": "reload",
                    "description": "Function to reload the datatable",
                    "type": "Function"
                }
            ],
            "class": "",
            "module": "ov.publish"
        },
        {
            "file": "app\\client\\admin\\js\\ovPub\\VideoController.js",
            "line": 154,
            "description": "Removes a list of videos.",
            "params": [
                {
                    "name": "selected",
                    "description": "The list of video ids to remove",
                    "type": "Array"
                },
                {
                    "name": "reload",
                    "description": "Function to reload the datatable",
                    "type": "Function"
                }
            ],
            "class": "",
            "module": "ov.publish"
        },
        {
            "file": "app\\client\\admin\\js\\ovPub\\VideoController.js",
            "line": 167,
            "description": "Saves video information.",
            "params": [
                {
                    "name": "video",
                    "description": "Video data",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "ov.publish"
        },
        {
            "file": "app\\client\\admin\\js\\ovPub\\VideoController.js",
            "line": 182,
            "description": "Routes to chapters edition.",
            "params": [
                {
                    "name": "video",
                    "description": "The video to edit",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "ov.publish"
        },
        {
            "file": "app\\client\\admin\\js\\ovPub\\VideoController.js",
            "line": 190,
            "description": "Gets property name by id.",
            "params": [
                {
                    "name": "id",
                    "description": "Id of the property",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The property name",
                "type": "String"
            },
            "class": "",
            "module": "ov.publish"
        },
        {
            "file": "app\\client\\admin\\js\\ovPub\\WatcherController.js",
            "line": 5,
            "description": "Defines the watcher controller for the watcher page.",
            "class": "",
            "module": "ov.publish"
        },
        {
            "file": "app\\client\\admin\\js\\ovPub\\WatcherController.js",
            "line": 11,
            "description": "Enables or disables actions on the watcher if status is not\nstable (starting or stopping).",
            "class": "",
            "module": "ov.publish"
        },
        {
            "file": "app\\client\\admin\\js\\ovPub\\WatcherController.js",
            "line": 19,
            "description": "Updates watcher status, if the status is in transition\nstate (starting or stopping) poll the server until the status\nis stable.",
            "params": [
                {
                    "name": "status",
                    "description": "The watcher status to set",
                    "type": "Number"
                }
            ],
            "class": "",
            "module": "ov.publish"
        },
        {
            "file": "app\\client\\admin\\js\\ovPub\\WatcherController.js",
            "line": 60,
            "description": "Starts the watcher.",
            "class": "",
            "module": "ov.publish"
        },
        {
            "file": "app\\client\\admin\\js\\ovPub\\WatcherController.js",
            "line": 70,
            "description": "Stops the watcher.",
            "class": "",
            "module": "ov.publish"
        },
        {
            "file": "app\\client\\admin\\js\\timePolyfill\\time-polyfill.js",
            "line": 7,
            "description": "Configuration of the angular-time-polyfill module",
            "params": [
                {
                    "name": "$provide",
                    "description": "The $provide service",
                    "type": "Type"
                }
            ],
            "class": "",
            "module": "ov.publish"
        },
        {
            "file": "app\\client\\admin\\js\\timePolyfill\\time-polyfill.js",
            "line": 12,
            "description": "Executes when \"link\"ing a time input",
            "params": [
                {
                    "name": "scope",
                    "description": "The scope to be used by the directive for registering watches",
                    "type": "Object"
                },
                {
                    "name": "element",
                    "description": "The element where the directive is to be used.",
                    "type": "Object"
                },
                {
                    "name": "attributes",
                    "description": "Normalized list of attributes declared on this element",
                    "type": "Object"
                },
                {
                    "name": "controllers",
                    "description": "The directive's required controller instance(s)",
                    "type": "Array"
                },
                {
                    "name": "$compile",
                    "description": "The $ccompile service",
                    "type": "Object"
                },
                {
                    "name": "$filter",
                    "description": "The $filter service",
                    "type": "Object"
                },
                {
                    "name": "$parse",
                    "description": "The parse service",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "ov.publish"
        }
    ],
    "warnings": [
        {
            "message": "Missing item type\nTODO\nDefines getter and setter on range data object.",
            "line": " app\\client\\admin\\js\\multirange\\multirange.js:333"
        },
        {
            "message": "Missing item type\nDefines the categories controller for the categories page.",
            "line": " app\\client\\admin\\js\\ovPub\\CategoriesController.js:5"
        },
        {
            "message": "Missing item type\nHandles success when a category is added or updated.",
            "line": " app\\client\\admin\\js\\ovPub\\CategoriesController.js:10"
        },
        {
            "message": "Missing item type\nHandles error when a category is added or updated.",
            "line": " app\\client\\admin\\js\\ovPub\\CategoriesController.js:20"
        },
        {
            "message": "Missing item type\nCheck that category name field is not empty.",
            "line": " app\\client\\admin\\js\\ovPub\\CategoriesController.js:29"
        },
        {
            "message": "Missing item type\nRights",
            "line": " app\\client\\admin\\js\\ovPub\\CategoriesController.js:98"
        },
        {
            "message": "Missing item type\nDefines the categories controller for the categories page.",
            "line": " app\\client\\admin\\js\\ovPub\\ChapterController.js:5"
        },
        {
            "message": "Missing item type\nReconstructs ranges with chapters and cut array.",
            "line": " app\\client\\admin\\js\\ovPub\\ChapterController.js:19"
        },
        {
            "message": "Missing item type\nInitializes chapters and start / end cuts.",
            "line": " app\\client\\admin\\js\\ovPub\\ChapterController.js:28"
        },
        {
            "message": "Missing item type\nGather some parameters before calling init",
            "line": " app\\client\\admin\\js\\ovPub\\ChapterController.js:60"
        },
        {
            "message": "Missing item type\nCalling preinit with a duration chnage on the player, it sometimes fail so...",
            "line": " app\\client\\admin\\js\\ovPub\\ChapterController.js:78"
        },
        {
            "message": "Missing item type\n... we also use a timer for initition, we consider 2 sec to be long enougth",
            "line": " app\\client\\admin\\js\\ovPub\\ChapterController.js:85"
        },
        {
            "message": "Missing item type\nSelects and unselect a provided cut",
            "line": " app\\client\\admin\\js\\ovPub\\ChapterController.js:242"
        },
        {
            "message": "Missing item type\nSelects or unselect the begin cut",
            "line": " app\\client\\admin\\js\\ovPub\\ChapterController.js:259"
        },
        {
            "message": "Missing item type\nSelects or unselect the ending cut",
            "line": " app\\client\\admin\\js\\ovPub\\ChapterController.js:267"
        },
        {
            "message": "Missing item type\nDefines the properties controller for the properties page.",
            "line": " app\\client\\admin\\js\\ovPub\\PropertiesController.js:5"
        },
        {
            "message": "Missing item type\nRemoves a list of properties.",
            "line": " app\\client\\admin\\js\\ovPub\\PropertiesController.js:10"
        },
        {
            "message": "Missing item type\nAdds a property.",
            "line": " app\\client\\admin\\js\\ovPub\\PropertiesController.js:24"
        },
        {
            "message": "Missing item type\nSaves property.",
            "line": " app\\client\\admin\\js\\ovPub\\PropertiesController.js:35"
        },
        {
            "message": "Missing item type\nDefines a filter to print status in cells.\n\nThis filter has one optional Number parameter which must be specified\nif the input is equal to 8 (error status), to precise the error code.",
            "line": " app\\client\\admin\\js\\ovPub\\PublishApp.js:14"
        },
        {
            "message": "Missing item type\nFilter to print Category in cells.",
            "line": " app\\client\\admin\\js\\ovPub\\PublishApp.js:45"
        },
        {
            "message": "Missing item type\nDefines the video controller for the videos page.",
            "line": " app\\client\\admin\\js\\ovPub\\VideoController.js:5"
        },
        {
            "message": "Missing item type\nGets all categories and add a value for \"none\".",
            "line": " app\\client\\admin\\js\\ovPub\\VideoController.js:54"
        },
        {
            "message": "Missing item type\nOpens a link in a new tab.",
            "line": " app\\client\\admin\\js\\ovPub\\VideoController.js:66"
        },
        {
            "message": "Missing item type\nOpens an alert to display HTML code to share the video.",
            "line": " app\\client\\admin\\js\\ovPub\\VideoController.js:74"
        },
        {
            "message": "Missing item type\nRetries a video which is on error.",
            "line": " app\\client\\admin\\js\\ovPub\\VideoController.js:101"
        },
        {
            "message": "Missing item type\nAsks server to start uploading the video to the chosen platform.",
            "line": " app\\client\\admin\\js\\ovPub\\VideoController.js:114"
        },
        {
            "message": "Missing item type\nPublishes a list of videos.",
            "line": " app\\client\\admin\\js\\ovPub\\VideoController.js:128"
        },
        {
            "message": "Missing item type\nUnpublishes a list of videos.",
            "line": " app\\client\\admin\\js\\ovPub\\VideoController.js:141"
        },
        {
            "message": "Missing item type\nRemoves a list of videos.",
            "line": " app\\client\\admin\\js\\ovPub\\VideoController.js:154"
        },
        {
            "message": "Missing item type\nSaves video information.",
            "line": " app\\client\\admin\\js\\ovPub\\VideoController.js:167"
        },
        {
            "message": "Missing item type\nRoutes to chapters edition.",
            "line": " app\\client\\admin\\js\\ovPub\\VideoController.js:182"
        },
        {
            "message": "Missing item type\nGets property name by id.",
            "line": " app\\client\\admin\\js\\ovPub\\VideoController.js:190"
        },
        {
            "message": "Missing item type\nDefines the watcher controller for the watcher page.",
            "line": " app\\client\\admin\\js\\ovPub\\WatcherController.js:5"
        },
        {
            "message": "Missing item type\nEnables or disables actions on the watcher if status is not\nstable (starting or stopping).",
            "line": " app\\client\\admin\\js\\ovPub\\WatcherController.js:11"
        },
        {
            "message": "Missing item type\nUpdates watcher status, if the status is in transition\nstate (starting or stopping) poll the server until the status\nis stable.",
            "line": " app\\client\\admin\\js\\ovPub\\WatcherController.js:19"
        },
        {
            "message": "Missing item type\nStarts the watcher.",
            "line": " app\\client\\admin\\js\\ovPub\\WatcherController.js:60"
        },
        {
            "message": "Missing item type\nStops the watcher.",
            "line": " app\\client\\admin\\js\\ovPub\\WatcherController.js:70"
        },
        {
            "message": "Missing item type\nConfiguration of the angular-time-polyfill module",
            "line": " app\\client\\admin\\js\\timePolyfill\\time-polyfill.js:7"
        },
        {
            "message": "Missing item type\nExecutes when \"link\"ing a time input",
            "line": " app\\client\\admin\\js\\timePolyfill\\time-polyfill.js:12"
        }
    ]
}